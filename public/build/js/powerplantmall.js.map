{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"powerplantmall.js","sourcesContent":["var closeModalDialog = function () {\r\n    $('.modal').modal('hide');\r\n};\r\n\r\n\r\nangular.module('powerPlantMall', ['ngRoute'])\r\n    .factory('httpRequestInterceptor', function () {\r\n        return {\r\n            request: function (config) {\r\n                config.headers['X-CSRF-TOKEN'] = $('meta[name=\"csrf-token\"]').attr('content');\r\n                return config;\r\n            }\r\n        };\r\n    })\r\n    .config(['$httpProvider', '$routeProvider', function ($httpProvider, $routeProvider) {\r\n        $httpProvider.interceptors.push('httpRequestInterceptor');\r\n        $routeProvider\r\n            .when('/', {\r\n                templateUrl: '/merchantList',\r\n                controller: 'merchantController',\r\n                resolve: {\r\n                    // I will cause a 1 second delay\r\n                    delay: function ($q, $timeout) {\r\n                        var delay = $q.defer();\r\n                        $timeout(delay.resolve, 1000);\r\n                        return delay.promise;\r\n                    }\r\n                }\r\n            })\r\n            .when('/merchants/:merchantId/:merchantName', {\r\n                templateUrl: '/productList',\r\n                controller: 'productController',\r\n                resolve: {\r\n                    // I will cause a 1 second delay\r\n                    delay: function ($q, $timeout) {\r\n                        var delay = $q.defer();\r\n                        $timeout(delay.resolve, 1000);\r\n                        return delay.promise;\r\n                    }\r\n                }\r\n            })\r\n            .when('/news', {\r\n                templateUrl: '/news',\r\n                controller: 'newsController',\r\n                resolve: {\r\n                    // I will cause a 1 second delay\r\n                    delay: function ($q, $timeout) {\r\n                        var delay = $q.defer();\r\n                        $timeout(delay.resolve, 1000);\r\n                        return delay.promise;\r\n                    }\r\n                }\r\n            })\r\n            .when('/articles', {\r\n                templateUrl: '/articles',\r\n                controller: 'productController',\r\n                resolve: {\r\n                    // I will cause a 1 second delay\r\n                    delay: function ($q, $timeout) {\r\n                        var delay = $q.defer();\r\n                        $timeout(delay.resolve, 1000);\r\n                        return delay.promise;\r\n                    }\r\n                }\r\n            })\r\n            .otherwise({redirectTo: '/'});\r\n    }])\r\n    .service('powerPlantService', ['$http', function ($http) {\r\n\r\n        this.getData = function (apiService) {\r\n            return $http.get(apiService);\r\n        };\r\n\r\n        this.updateDataById = function (apiService, id, data) {\r\n            return $http.put(apiService + id, data);\r\n        };\r\n\r\n        this.postData = function (apiService, data) {\r\n            return $http.post(apiService, data);\r\n        };\r\n\r\n        this.deleteData = function (apiService, id) {\r\n            return $http.delete(apiService + id);\r\n        };\r\n    }])\r\n    .controller('merchantController', ['$scope', 'powerPlantService', function ($scope, powerPlantService) {\r\n\r\n        var apiService = 'api/v1/merchants/';\r\n\r\n        $scope.merchants = {};\r\n        $scope.merchant = {};\r\n        $scope.products = {};\r\n\r\n        var getMerchant = function () {\r\n            powerPlantService.getData(apiService).then(function (response) {\r\n                $scope.merchants = response.data;\r\n                $scope.messageErrors = {};\r\n            }, function (response) {\r\n                $scope.merchants = response.data || 'Request failed';\r\n                $scope.status = response.status;\r\n            });\r\n        };\r\n\r\n        $scope.getProductsByMerchantId = function (merchantId) {\r\n            if (angular.isUndefined(merchantId) == false) {\r\n                powerPlantService.getData(apiService + merchantId + '/products/').then(function (response) {\r\n                    $scope.products = response.data;\r\n                    $scope.messageErrors = {};\r\n                    console.log(response.data);\r\n                }, function (response) {\r\n                    $scope.products = response.data || 'Request failed';\r\n                    $scope.status = response.status;\r\n                });\r\n            }\r\n        };\r\n\r\n        $scope.addMerchant = function () {\r\n            powerPlantService.postData(apiService, $scope.merchant).then(function (response) {\r\n               $scope.merchants.merchants.push(response.data.merchants);\r\n                closeModalDialog();\r\n            }, function (response) {\r\n                $scope.messageErrors = response.data || 'Request failed';\r\n                $scope.status = response.status;\r\n            });\r\n        };\r\n\r\n        $scope.deleteMerchant = function (id) {\r\n            powerPlantService.deleteData(apiService, id).then(function () {\r\n                var index = $scope.merchants.merchants.indexOf($scope.merchant);\r\n                $scope.merchants.merchants.splice(index,1);\r\n                closeModalDialog();\r\n            }, function (response) {\r\n                $scope.status = response.status;\r\n            });\r\n        };\r\n\r\n        $scope.getMerchantObj = function (merchants) {\r\n            $scope.merchant = merchants;\r\n        };\r\n\r\n        $scope.updateMerchantById = function (id) {\r\n            powerPlantService.updateDataById(apiService, id, $scope.merchant).then(function () {\r\n                closeModalDialog();\r\n            }, function (response) {\r\n                $scope.status = response.status;\r\n                $scope.messageErrors = response.data || 'Request failed';\r\n            });\r\n        };\r\n        getMerchant();\r\n    }])\r\n    .controller('productController', ['$scope', 'powerPlantService', '$routeParams', '$controller', function ($scope, powerPlantService, $routeParams, $controller) {\r\n\r\n        var apiService = 'api/v1/products/';\r\n        $scope.params = $routeParams;\r\n\r\n        $scope.products = {};\r\n        $scope.product = {};\r\n\r\n        angular.extend(this, $controller('merchantController', {$scope: $scope}));\r\n\r\n        $scope.addProduct = function () {\r\n\r\n            powerPlantService.postData(apiService, $scope.product).then(function (response) {\r\n                $scope.products.products.push(response.data.products);\r\n                closeModalDialog();\r\n\r\n            }, function (response) {\r\n                $scope.messageErrors = response.data || 'Request failed';\r\n                $scope.status = response.status;\r\n            });\r\n        };\r\n\r\n        $scope.deleteProduct = function (id) {\r\n            powerPlantService.deleteData(apiService, id).then(function () {\r\n                var index = $scope.products.products.indexOf($scope.product);\r\n                $scope.products.products.splice(index,1);\r\n                closeModalDialog();\r\n            }, function (response) {\r\n                $scope.status = response.status;\r\n            });\r\n        };\r\n\r\n        $scope.getProductObj = function (products) {\r\n            $scope.product = products;\r\n        };\r\n\r\n        $scope.getProducts = function () {\r\n            powerPlantService.getData(apiService).then(function (response) {\r\n                $scope.products = response.data;\r\n                $scope.messageErrors = {};\r\n            }, function (response) {\r\n                $scope.products = response.data || 'Request failed';\r\n                $scope.status = response.status;\r\n            });\r\n        };\r\n\r\n        $scope.updateProductById = function (id) {\r\n            powerPlantService.updateDataById(apiService, id, $scope.product).then(function () {\r\n                closeModalDialog();\r\n            }, function (response) {\r\n                $scope.status = response.status;\r\n                $scope.messageErrors = response.data || 'Request failed';\r\n            });\r\n        };\r\n        $scope.getProductsByMerchantId($scope.params.merchantId);\r\n    }])\r\n    .controller('newsController', ['$scope','$controller', function ($scope,$controller) {\r\n\r\n        angular.extend(this, $controller('productController', {$scope: $scope}));\r\n        console.log('asdasd');\r\n        $scope.getProducts();\r\n    }]);\r\n"]}